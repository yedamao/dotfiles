" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" Shorthand notation; fetches https://github.com/junegunn/vim-easy-align
Plug 'junegunn/vim-easy-align'

" Any valid git URL is allowed
"Plug 'https://github.com/junegunn/vim-github-dashboard.git'

" Multiple Plug commands can be written in a single line using | separators
"Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
" A plugin of NERDTree showing git status
Plug 'Xuyuanp/nerdtree-git-plugin'

" Using a non-master branch
"Plug 'rdnetto/YCM-Generator', { 'branch': 'stable' }

" Using a tagged release; wildcard allowed (requires git 1.9.2 or above)
Plug 'fatih/vim-go', { 'do': ':GoInstallBinaries' }

" Plugin outside ~/.vim/plugged with post-update hook
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Youcompleteme
Plug 'valloric/youcompleteme', { 'do': './install.py --clang-completer --go-completer' }

Plug 'vim-scripts/c.vim'

Plug 'vim-scripts/bash-support.vim'

Plug 'tpope/vim-surround'

Plug 'scrooloose/syntastic'

Plug 'majutsushi/tagbar'

Plug 'bling/vim-airline'

Plug 'jiangmiao/auto-pairs'

Plug 'tpope/vim-fugitive'

Plug 'scrooloose/nerdcommenter'

Plug 'airblade/vim-gitgutter'

Plug 'yedamao/vim-dict', { 'do': 'go install github.com/yedamao/dict@latest' }

" Initialize plugin system
call plug#end()

"  Youcompleteme settings
"  share gopls with vim-go
let g:ycm_gopls_args = ['-remote=auto']
let g:ycm_gopls_binary_path = [$GOPATH.'/gopls']

" Basic Settings --- {{{
set number
set cursorline
" show existing tab with 2 spaces width
set tabstop=2
" when indenting with '>', use 2 spaces width
set shiftwidth=2
" On pressing tab, insert 4 spaces
set expandtab

syntax on
filetype plugin indent on
" }}}

let mapleader = ","

" Mappings  --- {{{
" jk to exit insert mode
inoremap <esc> <nop>
inoremap jk <esc>
" search
nnoremap <leader>f :Files<cr>
nnoremap <leader>g :exe "Ag " . expand("<cword>")<cr>
" }}}

" Edit and reload $MYVIMRC --- {{{
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
augroup reloadVimrcGroup
  autocmd!
  autocmd BufWrite $MYVIMRC :echom "$MYVIMRC changed!"
  autocmd BufWrite $MYVIMRC :source $MYVIMRC
augroup END
" }}}

" Vimscript file settings --- {{{
augroup filetype_vim
 autocmd!
 autocmd FileType vim setlocal foldmethod=marker
augroup END
" }}}
